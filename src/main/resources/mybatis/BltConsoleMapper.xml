<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tpadsz.after.dao.BltConsoleDao">

    <parameterMap id="consoleMapper" type="map">
        <parameter property="uid" mode="IN"/>
        <parameter property="meshId" mode="IN"/>
        <parameter property="placeId" mode="IN"/>
        <parameter property="gid" mode="IN"/>
        <parameter property="lmac" mode="IN"/>
        <parameter property="cmd" mode="IN"/>
        <parameter property="x" mode="IN"/>
        <parameter property="y" mode="IN"/>
        <parameter property="result" mode="OUT" jdbcType="INTEGER"/>
    </parameterMap>

    <select id="saveOperation" parameterMap="consoleMapper" statementType="CALLABLE">
		CALL alink.save_operation (?,?,?,?,?,?,?,?,?)
	</select>

    <update id="saveSceneName" parameterType="map">
		UPDATE f_scene
		SET sname = #{sname},update_date=NOW()
		WHERE
		scene_id = #{sceneId}
		AND mid = (
		SELECT
		id
		FROM
		f_mesh
		WHERE
		mesh_id = #{meshId}
		AND uid = #{uid}
		)
	</update>

	<select id="getTotal" parameterType="map" resultType="int">
		SELECT COUNT(0) total
		FROM f_light l
		INNER JOIN f_mesh m ON m.id = l.mid
		WHERE 1 = 1
		AND m.mesh_id = #{meshId}
		AND m.uid = #{uid}
	</select>

	<select id="getPid" parameterType="map" resultType="int">
		SELECT id FROM f_place WHERE mid=(SELECT  id FROM f_mesh WHERE mesh_id =#{meshId} AND uid=#{uid})
	</select>

    <select id="getAll" resultType="map" parameterType="map">
		SELECT
-- 			m.mesh_id,
		    s.scene_id,
			s.sname,
			g.group_id,
			g.gname,
			l.lmac,
			ls.x,
			ls.y,
			ls.off
		FROM
			f_mesh m
		INNER JOIN f_group g ON g.mid = m.id
		INNER JOIN f_light l ON g.id = l.gid
		INNER JOIN f_light_setting ls ON ls.lid = l.id
		INNER JOIN f_scene s ON s.id = ls.sid
		WHERE m.uid = #{uid}
		AND m.mesh_id =  #{meshId}
		ORDER BY s.scene_id,g.group_id
    </select>

    <select id="getScenes" resultType="map" parameterType="map">
		SELECT
			m.mesh_id,
			s.scene_id,
			s.sname
		FROM
			f_mesh m
		INNER JOIN f_scene s ON m.id = s.mid
		WHERE s.uid =  #{uid}
		AND m.mesh_id =  #{meshId}
		GROUP BY m.mesh_id,s.scene_id,s.sname
	</select>

    <select id="getGroups" resultType="map" parameterType="map">
		SELECT
			m.mesh_id,
			g.group_id,
			g.gname,
-- 			IFNULL(g.pid,0) pid,
			l.lcount
		FROM
			f_group g
		LEFT JOIN f_place p ON p.id=g.pid
		LEFT JOIN f_mesh m ON m.id = g.mid
		LEFT JOIN (SELECT COUNT(0) lcount,gid FROM f_light GROUP BY gid) l ON g.id=l.gid
		WHERE 1=1
		AND m.uid = #{uid}
		AND m.mesh_id = #{meshId}
		GROUP BY m.mesh_id,g.group_id,g.gname,g.pid,l.lcount
	</select>

    <delete id="deleteScene" parameterType="map">
		DELETE
		FROM
		f_scene
		WHERE
		scene_id = #{sceneId}
		AND mid = (
		SELECT
		id
		FROM
		f_mesh
		WHERE mesh_id = #{meshId}
		AND uid = #{uid}
		)
	</delete>

    <update id="saveApplyScene" parameterType="map">
		UPDATE f_scene_setting set x=#{x},y=#{y},update_date=NOW()
		WHERE
			sid = (
				SELECT
					s.id
				FROM
					f_scene s
				WHERE s.scene_id = #{sceneId}
				AND s.uid = #{uid}
				AND mid = (
					SELECT
						id
					FROM
						f_mesh
					WHERE
						mesh_id = #{meshId}
				)
			)
	</update>
</mapper>