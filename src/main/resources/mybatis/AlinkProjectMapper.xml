<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tpadsz.after.dao.ProjectDao">

    <resultMap type="Mesh" id="standardMeshMap">
        <id property="id" column="id" javaType="Integer" jdbcType="INTEGER"/>
        <result property="mname" column="mname" javaType="String" jdbcType="VARCHAR"/>
        <result property="mesh_id" column="mesh_id" javaType="String" jdbcType="VARCHAR"/>
        <result property="is_repeat" column="is_repeat" javaType="String" jdbcType="VARCHAR"/>
        <result property="pwd" column="pwd" javaType="String" jdbcType="VARCHAR"/>
        <result property="uid" column="uid" javaType="String" jdbcType="VARCHAR"/>
        <result property="project_id" column="project_id" javaType="Integer" jdbcType="INTEGER"/>
        <result property="create_date" column="create_date" javaType="Date" jdbcType="TIMESTAMP"/>
        <result property="update_date" column="update_date" javaType="Date" jdbcType="TIMESTAMP"/>
        <result property="other" column="other" javaType="String" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap type="Project" id="standardProjectMap">
        <id property="id" column="id" javaType="Integer" jdbcType="INTEGER"/>
        <result property="name" column="name" javaType="String" jdbcType="VARCHAR"/>
        <result property="add" column="add" javaType="String" jdbcType="VARCHAR"/>
        <result property="uid" column="uid" javaType="String" jdbcType="VARCHAR"/>
        <result property="create_date" column="create_date" javaType="Date" jdbcType="TIMESTAMP"/>
        <result property="update_date" column="update_date" javaType="Date" jdbcType="TIMESTAMP"/>
        <result property="other" column="other" javaType="String" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="findRepeatIdByUid" resultMap="standardMeshMap" parameterType="string">
        SELECT * from alink.f_mesh where mesh_id LIKE CONCAT(#{mesh_id},'%') and uid = #{uid}
    </select>

    <insert id="createMesh" parameterType="com.tpadsz.after.entity.Mesh">
        INSERT INTO alink.f_mesh (mname,mesh_id,pwd,uid,project_id,create_date) VALUES(#{mname},#{mesh_id},#{pwd},#{uid},#{project_id},NOW())
        <selectKey keyProperty="id" order="AFTER" resultType="int">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>

    <insert id="createOldMesh" parameterType="com.tpadsz.after.entity.Mesh">
        INSERT INTO alink.f_mesh (mname,mesh_id,pwd,uid,project_id,create_date,other) VALUES(#{mname},#{mesh_id},#{pwd},#{uid},#{project_id},NOW(),'old')
    </insert>

    <insert id="createOldDuplicatedMesh" parameterType="com.tpadsz.after.entity.Mesh">
        INSERT INTO alink.f_mesh (mname,mesh_id,is_repeat,pwd,uid,project_id,create_date,other) VALUES(#{mname},#{mesh_id},#{uid},#{pwd},#{uid},#{project_id},NOW(),'old')
    </insert>

    <insert id="createProject" parameterType="com.tpadsz.after.entity.Project">
        INSERT INTO alink.f_project (name,uid,create_date) VALUES(#{name},#{uid},NOW())
        <selectKey keyProperty="id" order="AFTER" resultType="int">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>

    <insert id="createOldProject" parameterType="com.tpadsz.after.entity.Project">
        INSERT INTO alink.f_project (name,uid,create_date,other) VALUES(#{name},#{uid},NOW(),'old')
        <selectKey keyProperty="id" order="AFTER" resultType="int">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>

    <select id="findMeshId" resultType="string" parameterType="int">
        select mesh_id from
        (SELECT * from alink.create_mesh_id ORDER BY id ASC LIMIT #{limitNum}) as a
        ORDER BY a.id DESC limit 1
    </select>

    <delete id="deleteMeshId" parameterType="int">
        DELETE FROM alink.create_mesh_id WHERE id=(select id from
        (SELECT * from alink.create_mesh_id ORDER BY id ASC LIMIT #{limitNum}) as a
        ORDER BY a.id DESC limit 1)
    </delete>

    <insert id="recordMeshId" parameterType="string">
        INSERT INTO alink.repeated_mesh_id (mesh_id) VALUES(#{mesh_id})
    </insert>

    <select id="findProListByUid" resultMap="standardProjectMap">
        SELECT * from alink.f_project where uid = #{uid} and other &lt;&gt;'old' or uid=#{uid} and other is null ORDER BY case when id=#{id} then 0 else 1 end , update_date DESC,create_date DESC
    </select>

    <select id="findOldProByUid" resultMap="standardProjectMap">
        SELECT * from alink.f_project where uid = #{uid} and other ='old'
    </select>

    <update id="rename">
        <if test="renameFlag == 0">
        update alink.f_project p set p.name = #{name},p.update_date = NOW() where p.id=#{id}
        </if>
        <if test="renameFlag == 1">
            update alink.f_mesh m set m.mname = #{name},m.update_date = NOW() where m.id=#{id}
        </if>
    </update>

    <select id="findProDetailByUid" resultMap="standardMeshMap">
        SELECT * from alink.f_mesh where project_id = #{projectId} and uid = #{uid} ORDER BY update_date DESC, create_date DESC
    </select>

    <select id="findLightByMid" resultType="int" parameterType="int">
        SELECT COUNT(1) from alink.f_light where mid=#{id}
    </select>

    <select id="findNewMeshIdByMid" resultType="string" parameterType="int">
        SELECT mesh_id from alink.f_mesh where id=#{id} and is_repeat=0 and other NOT IN ('old','fromOld') or id=#{id} and is_repeat=0  and other IS NULL
    </select>

    <delete id="deleteByMid" parameterType="int">
        DELETE FROM alink.f_mesh WHERE id=#{id}
    </delete>

    <select id="findLightByPid" resultType="int">
        SELECT COUNT(1) FROM alink.f_light WHERE mid IN (
        SELECT m.id from alink.f_mesh m where m.project_id=#{id} and m.uid = #{uid}
        )
    </select>

    <delete id="deleteMeshByPid">
        DELETE FROM alink.f_mesh WHERE id IN (SELECT m.id from (SELECT id from alink.f_mesh where project_id=#{id} and uid = #{uid}) AS m )
    </delete>

    <delete id="deleteProByPid">
        DELETE FROM alink.f_project WHERE id=#{id} and uid = #{uid}
    </delete>

    <select id="findNewMeshIdByPid" resultType="string">
        SELECT mesh_id from alink.f_mesh where project_id=#{id} and is_repeat=0 and uid = #{uid} and other NOT IN ('old','fromOld') or project_id=#{id} and is_repeat=0 and uid = #{uid} and other IS NULL
    </select>

    <insert id="insertMeshId" parameterType="java.util.List" useGeneratedKeys="false">
        insert into alink.repeated_mesh_id
        (mesh_id)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item}
            )
        </foreach>
    </insert>

    <update id="oldMove">
            update alink.f_mesh set project_id = #{projectId},other = 'fromOld',update_date = NOW() where mesh_id=#{meshId} and uid=#{uid}
    </update>

</mapper>